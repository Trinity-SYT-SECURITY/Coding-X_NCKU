"""
03-01 迴圈整數連加
請使用迴圈敘述撰寫一程式，讓使用者輸入兩個正整數a、b（a < b），利用迴圈計算從a開始連加到b的總和。
例如：輸入a=1、b=100，則輸出結果為5050（1 + 2 + … + 100 = 5050）。

Ans:
"""

numa = eval(input("a="))  # a，初值
numb = eval(input("b="))  # b, 終值
totalj = 0  # 加總的總和
for j in range(numa, numb+1):  # 加總迴圈
    totalj += j
print("%d+...+%d=%d" % (numa, numb, totalj))
"""
10+...+100=5005
"""
print("~"*150)

"""
03-04 迴圈倍數總和
請以迴圈敘述寫一程式，讓使用者輸入一個正整數a，利用迴圈計算從1到a之間，所有5之倍數數字列表及總和
ANS:
"""
a = eval(input("a="))
num = 0

for i in range(1, a+1):
    if i % 5 == 0:
        num += i
        print(i, end=',')
print("1~%d的5倍數數字總和: %d" % (a, num))
"""
a=100
5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,1~100的5倍數數字總和: 1050
"""
print("~"*150)
"""
04-10 繪製等腰三角形 **
**請以一程式，利用雙層for迴圈，依照使用者輸入的n，劃出對應的等腰三角形。(每列最後一個*右方無空白)
例:>>>3 =>

　　＊
　＊＊＊
＊＊＊＊＊
Ans:
#  ＊   i=1(層次), j=1(＊)(i*2-1),k=2(空白)(n-i)
# ＊＊＊  i=2, j=3, k=1
#＊＊＊＊＊ i=3, j=5 k=0
"""
"""
n = eval(input("輸入想要多少層的等腰三角形:"))
for i in range(1, n+1):
    print(" "*(n-i)+"*"*(i*2-1))
"""
numn = eval(input("請輸入等腰三角形的層次數:"))
for i in range(1, numn+1):  # 一層一行 #外層
    for k in range(1, (numn-i)+1):  # 內層，空白的數量
        print("　", end="")
    for j in range(1, (i*2-1)+1):
        print("＊", end="")  # 內層，＊的數量
    print()  # 換行
"""
輸入想要多少層的等腰三角形:10
　　　　　　　　　＊
　　　　　　　　＊＊＊
　　　　　　　＊＊＊＊＊
　　　　　　＊＊＊＊＊＊＊
　　　　　＊＊＊＊＊＊＊＊＊
　　　　＊＊＊＊＊＊＊＊＊＊＊
　　　＊＊＊＊＊＊＊＊＊＊＊＊＊
　　＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
　＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
"""

print("~"*150)
"""
for_else 範例
利用 for … else … 迴圈來判斷質數 輸入：一個大於 1 的整數 n 輸出：

如果 n 是質數 “n 是質數”

如果 n 不是質數 “n 不是質數”
"""
n = int(input("輸入非1正整數:"))
for i in range(2, n):
    if(n % i) == 0:
        print(n, "不是質數!!可將n整除=>n不是質數")
        break
else:
    print(n, "是質數")

"""
輸入非1正整數:3
3 是質數
入非1正整數:10
10 不是質數!!可將n整除=>n不是質數
"""


print("~"*150)
"""
04-02 不定數迴圈-最小值 請以一程式，讓使用者輸入數字，輸入的動作直到輸入值為9999才結束，然後找到其最小值，並輸出最小值。
Ans:
"""
thenum = eval(input("輸入一整數，9999就結束輸入:"))
min_num = thenum

while thenum != 9999:
    thenum = eval(input("輸入一整數，9999就結束輸入"))
    if thenum < min_num:
        min_num = thenum
print("您所輸入的所有整數，最小整數是:%d" % (min_num))

"""
輸入一整數，9999就結束輸入:434
輸入一整數，9999就結束輸入6666
輸入一整數，9999就結束輸入432
輸入一整數，9999就結束輸入2222
輸入一整數，9999就結束輸入-54 
輸入一整數，9999就結束輸入-666
輸入一整數，9999就結束輸入-44
輸入一整數，9999就結束輸入0
輸入一整數，9999就結束輸入-9999
輸入一整數，9999就結束輸入9999
您所輸入的所有整數，最小整數是:-9999
"""

print("~"*150)
"""
04-07 不定數迴圈-閏年判斷
(1) 請撰寫一程式，以不定數迴圈的方式讓使用者輸入西元年份，然後判斷它是否為閏年（leap year）或平年。
其判斷規則如下：每四年一閏，每百年不閏，但每四百年也一閏。
(2) 假設此不定數迴圈輸入-9999則會結束此迴圈。
2017=>2017 is not a leap year.
2000=>2000 is a leap year. Ans:
"""

theyear = eval(input("請輸入一西元年，來判斷是否為閏年:"))
while theyear != -9999:
    # 開始判斷閏年
    if (theyear % 4 == 0) and (theyear % 100 != 0) or (theyear % 400 == 0):
        print("%d 是閏年" % (theyear))
    else:
        print("%d 是平年" % (theyear))
    # 在輸入下一個西元年
    theyear = eval(input("請輸入一西元年，來判斷是否為閏年:"))
"""
請輸入一西元年，來判斷是否為閏年:2000
2000 是閏年
請輸入一西元年，來判斷是否為閏年:1987
1987 是平年
請輸入一西元年，來判斷是否為閏年:6666
6666 是平年
請輸入一西元年，來判斷是否為閏年:1800
1800 是平年
請輸入一西元年，來判斷是否為閏年:1000
1000 是平年
請輸入一西元年，來判斷是否為閏年:2400
2400 是閏年
請輸入一西元年，來判斷是否為閏年:-9999
"""
print("~"*150)
"""
請以一程式，讓使用者輸入正整數，將此正整數以反轉的順序輸出，並判斷如輸入0，則輸出0。
例:>>>31283， =>38213請以一程式，讓使用者輸入正整數，將此正整數以反轉的順序輸出，
並判斷如輸入0，則輸出0。
例:>>>31283， =>38213
"""

nums = input("請輸入一整數做反轉: ")  # 輸入數字字串=>字串List=>nums
print(nums[::-1])  # 反轉

# V3
print(input("請輸入一整數做反轉 : ")[::-1])

"""
請輸入一整數做反轉: 8647891
1987468
請輸入一整數做反轉: 0539742
2479350
"""
